<!DOCTYPE flight_plan SYSTEM "flight_plan.dtd">
<!-- A simple flightplan for automated SITL/HITL verification: it launches and lands itself, giving us an idea whether a given airframe
     can finish it -->
<flight_plan alt="260" ground_alt="185" lat0="43.46223" lon0="1.27289" max_dist_from_home="10000" name="Basic" security_height="25">
  <header>
#include "subsystems/datalink/datalink.h"
#include "state.h"
</header>
  <waypoints>
    <waypoint name="HOME" x="0" y="0"/>
    <waypoint name="p1" x="-50" y="100"/>
    <waypoint name="p2" x="-50" y="-100"/>
    <waypoint name="TRACK" x="0" y="0"/>
  </waypoints>
  <variables>
    <variable var="abvGroundAlt" init="0"/>
  </variables>
  <blocks>
    <block name="Takeoff">
      <call_once fun="NavKillThrottle()"/>
      <while cond="!GpsFixValid()"/>
      <call_once fun="NavSetGroundReferenceHere()"/>
      <while cond="LessThan(NavBlockTime(), 10)"/>
      <call_once fun="NavResurrect()"/>
      <stay vmode="climb" climb="0.5" wp="HOME"/>
    </block>
<adaptation name="AbvGroundAlt" var="abvGroundAlt" guard="datalink_time > 10" value="abvGroundAlt + 0.1" min="GetAltRef() + 2" max="GetAltRef() + 15"/>
<adaptation name="ReturnToTrackAndAscend" guard="datalink_time > 5">
  <stay wp="TRACK" vmode="alt" alt="abvGroundAlt" until="datalink_time > 10"/>
  <stay wp="TRACK" vmode="alt" alt="GetAltRef()"/>
</adaptation>
<adaptation name="SignalTrack" guard="datalink_time @LT 0.25" value="waypoint_set_here()" var="WP_TRACK"/>
<block name="singal_adaptive_path" adaptations="AbvGroundAlt, ReturnToTrackAndAscend, SignalTrack">
  <path wpts= "p1, p2" vmode="alt" alt="abvGroundAlt"/>
</block>
  </blocks>
</flight_plan>
